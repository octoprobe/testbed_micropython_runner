name: testbed_micropython Start

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      repo_tests:
        description: 'The microptyhon repo used for the test code'
        default: 'https://github.com/micropython/micropython.git@v1.24.1'
        required: true
        type: string

      repo_firmware:
        description: 'The microptyhon repo used to build the firmware'
        default: 'https://github.com/micropython/micropython.git@v1.24.1'
        required: true
        type: string

      aux:
        description: 'Auxiliary arguments to mptest'
        default: '--git-clean --flash-force'
        required: false
        type: string
  
jobs:
  testrun:
    # runs-on: octoprobe
    runs-on: ubuntu-latest

    steps:
    - name: Send greeting
      run: echo "Hello mptest ${{ inputs.repo_tests }} ${{ inputs.repo_firmware }} ${{ inputs.aux }}"

    - name: Run mptest
      run: |
        . ~/.profile
        mkdir -p testresults
        touch testresults/testresult_${{ github.run_id }}_${{ github.run_number }}.txt
        echo Hello ${{ github.run_id }} ${{ github.run_number }} > testresults/index.html
        # mptest test --micropython-tests ${{ inputs.repo_tests }} --firmware-build ${{ inputs.repo_firmware }} ${{ inputs.aux }}
      timeout-minutes: 30.0

    - name: Setup Pages
      if: github.ref == 'refs/heads/gh-pages'
      uses: actions/configure-pages@v3

    - name: Upload Artifact
      if: github.ref == 'refs/heads/gh-pages'
      uses: actions/upload-pages-artifact@v1
      with:
        path: "./testresults"

  deploy-testresults:
    if: github.ref == 'refs/heads/gh-pages'
    runs-on: ubuntu-latest
    needs: testrun
    
    permissions:
      pages: write
      id-token: write

    environment:
      # environment created automatically by GitHub
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2