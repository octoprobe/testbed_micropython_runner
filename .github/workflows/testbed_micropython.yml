name: testbed_micropython

on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      repo_tests:
        description: 'The microptyhon repo used for the test code'
        # default: 'https://github.com/micropython/micropython.git@v1.24.1'
        default: 'https://github.com/micropython/micropython.git@master'
        required: true
        type: string

      repo_firmware:
        description: 'The microptyhon repo used to build the firmware'
        # default: 'https://github.com/micropython/micropython.git@v1.24.1'
        default: 'https://github.com/micropython/micropython.git@master'
        required: true
        type: string

      aux:
        description: 'Auxiliary arguments to mptest'
        default: '--git-clean --flash-skip --only-test=RUN-TESTS_EXTMOD_HARDWARE --only-board=RPI_PICO_W'
        required: false
        type: string

permissions:
  pull-requests: write
  issues: write
  repository-projects: write

jobs:
  trace:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      # https://manski.net/articles/github/actions/dump-context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"

    - name: Dump GitHub Event
      # https://youtu.be/-hVG9z0fCac?si=dAAVltMAbmwyMQBu
      run: echo '${{ toJson(github.event) }}' | jq
      shell: bash

    - name: Dump GitHub Event 2
      # https://youtu.be/-hVG9z0fCac?si=dAAVltMAbmwyMQBu
      run: echo '${{ toJson(github) }}' | jq
      shell: bash

  testrun:
    runs-on: octoprobe
    # runs-on: ubuntu-latest

    steps:
    - name: Send greeting
      run: echo "Hello mptest ${{ inputs.repo_tests }} ${{ inputs.repo_firmware }} ${{ inputs.aux }}"

    - name: Run mptest
      run: |
        . ~/.profile
        # pwd
        # rm -rf testresults
        # cp -r /home/githubrunner/testbed_micropython/results testresults
        # touch testresults/testresult_${{ github.run_id }}_${{ github.run_number }}.txt
        mptest test --testresults=./testresults --micropython-tests ${{ inputs.repo_tests }} --firmware-build ${{ inputs.repo_firmware }} ${{ inputs.aux }}
        hostname > testresults/index.html
        echo Hello ${{ github.run_id }} ${{ github.run_number }} >> testresults/index.html
      timeout-minutes: 60.0

    - name: Add summary report
      # https://github.com/peter-evans/create-or-update-comment/blob/main/README.md
      uses: peter-evans/create-or-update-comment@v4
      with:
        # issue-number: ${{ github.event.issue.number }}
        issue-number: 19
        body-path: "./testresults/octoprobe_summary_report.md"

    - name: Setup Pages
      if: github.ref == 'refs/heads/main'
      uses: actions/configure-pages@v3

    - name: Upload Pages Artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/upload-pages-artifact@v3
      with:
        path: "./testresults"

    - name: Upload Artifacts
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: octoprobe-report
        path: "./testresults"
  
  deploy-testresults:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: testrun
    
    permissions:
      pages: write
      id-token: write

    environment:
      # environment created automatically by GitHub
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
